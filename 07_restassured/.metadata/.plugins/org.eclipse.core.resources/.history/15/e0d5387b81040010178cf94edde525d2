package parseJsonXMLResponse;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

import java.util.List;

import org.testng.Assert;
import org.testng.annotations.Test;

import io.restassured.path.xml.XmlPath;
import io.restassured.response.Response;

public class ParsingXMLResponse {
  @Test
  void testXMLResponse() {
// Approach 1: validating without response
    given()
    .when()
      .get("https://www.w3schools.com/xml/simple.xml")
    .then()
      .statusCode(200)
      .header("Content-Type", "application/xml")
      .body("TravelerinformationResponse", equalTo("1"))
    ;
// Approach 2: validating with response
    Response res = 
    given()
    .when()
      .get("https://www.w3schools.com/xml/simple.xml");
    
    Assert.assertEquals(res.getStatusCode(), 200);
    Assert.assertEquals(res.header("Content-Type"),"application/xml");
    
    String pageNo = res.xmlPath().getString("TravelerinformationResponse.page").toString();
    Assert.assertEquals(pageNo, "1");
    
//XmlPath class 
    XmlPath xmlPath = new XmlPath(res.asString());
    //Verify total number of travellers
    List<String> travellers = xmlPath.getList("TravelerinformationResponse.travelers.Travelerinformation");
    Assert.assertEquals(travellers.size(), 10);
    
    //Verify travellers name is present in response
    List<String> travellersName = xmlPath.getList("TravelerinformationResponse.travelers.Travelerinformation.name");
    boolean status = false;
    for(String travellerName : travellersName) {
      if(travellerName.equals("Vijay Bharath Reddy")) {
        status = true;
        break;
      }
    }
    Assert.assertEquals(status, true);
  }
}
