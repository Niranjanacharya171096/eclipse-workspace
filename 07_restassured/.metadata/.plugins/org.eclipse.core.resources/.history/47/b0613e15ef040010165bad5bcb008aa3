package chaniningGoRest;

import static io.restassured.RestAssured.*;

import org.json.JSONObject;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import com.github.javafaker.Faker;
import io.restassured.RestAssured;

public class CRUDChaining {

  String bearerToken = "Bearer d8a1562e3eae56feb9141a1142b7341a34667de83315c0de1573a5511b40d39d";
  int userId;
   JSONObject jsonObj;

  @BeforeClass
  public void setup() {
    RestAssured.baseURI = "https://gorest.co.in"; //we can add /public/v2
    RestAssured.basePath = "/public/v2/users";
  }

  @Test
  void testChaining() {
    jsonObj = fakeData();

    // POST request - Create User
    userId = 
        given()
          .headers("Authorization", bearerToken)
          .contentType("application/json")
          .body(jsonObj.toString())
        .when()
          .post()
        .then().statusCode(201)
          .extract()
          .jsonPath().getInt("id");

    System.out.println("Created User ID: " + userId);

    // GET request - Fetch User Details
    given()
      .headers("Authorization", bearerToken)
      .pathParam("id", userId)
    .when()
      .get("/{id}")
    .then()
      .statusCode(200)
      .log().body();

    jsonObj = fakeData();

    String bearerToken = "Bearer d8a1562e3eae56feb9141a1142b7341a34667de83315c0de1573a5511b40d39d";

    given()
      .headers("Authorization", bearerToken)
      .contentType("application/json")
      .pathParam("id", userId)
      .body(jsonObj.toString())
    .when()
      .put("/{id}")
    .then()
      .statusCode(200)
      .log().body();

    // GET request - Fetch User Details
    given()
      .headers("Authorization", bearerToken)
      .pathParam("id", userId)
    .when()
      .delete("/{id}")
    .then()
      .statusCode(204)
      .log().body();
  }

   JSONObject fakeData() {
    Faker faker = new Faker();

    JSONObject jsonObj = new JSONObject();
    jsonObj.put("name", faker.name().fullName());
    jsonObj.put("gender", "FeMale");
    jsonObj.put("email", faker.internet().emailAddress());
    jsonObj.put("status", "active");

    return jsonObj;
  }
}
